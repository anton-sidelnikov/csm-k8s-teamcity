---
- name: Prepare user
  hosts: kube-master
  tasks:
    - name: prepare cluster config
      shell: |
        sudo cp /etc/kubernetes/admin.conf $HOME/
        sudo chown $(id -u):$(id -g) $HOME/admin.conf
        export KUBECONFIG=$HOME/admin.conf

- name: Prepare pods
  hosts: kube-master
  become: yes
  tasks:
    - name: Retrieve kubectl config file from the master server.
      fetch:
        src: /root/.kube/config
        dest: files/kubectl-config
        flat: yes

    - name: TeamCity deployment definition
      copy:
        src: files/teamcity
        dest: "{{ tmp_dir }}"

    - name: Apply TeamCity Server definition.
      command: "kubectl apply -f {{ tmp_dir }}/teamcity/teamcity-server.yml"
      register: teamcity_server_pod

    - name: Apply TeamCity service definition.
      command: "kubectl apply -f {{ tmp_dir }}/teamcity/teamcity-service.yml"
      register: teamcity_server_pod

    - name: Apply TeamCity Agent definition.
      command: "kubectl apply -f {{ tmp_dir }}/teamcity/teamcity-agent.yml"
      register: teamcity_server_pod

- name: Install nginx reverse proxy to Bastion
  hosts: bastion
  become: yes
  vars:
    nodename: "{{ groups['nodes'][0] }}"
  tasks:
    - name: Install required packages
      apt:
        name:
          - python3-setuptools
          - python3-pip
          - libpq-dev
          - build-essential
          - python3-dev

    - name: Install psycopg2
      pip:
        name: psycopg2

    - name: Create a new database with name "teamcity"
      postgresql_db:
        login_user: db_username
        login_host: db_address.split(":")[0]
        login_password: db_password
        port: db_address.split(":")[1]
        name: teamcity
  roles:
    - role: geerlingguy.nginx
      vars:
        nginx_remove_default_vhost: yes
        nginx_vhosts:
          - listen: "80"
            server_name: "localhost"
            extra_parameters: |
              location / {
                  proxy_pass http://{{ hostvars.node1.ansible_host }}:31600;
                  proxy_set_header Host $host;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_http_version 1.1;
              }
